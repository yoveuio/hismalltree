buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "org.springframework.boot" version '3.0.6' apply false
    id "io.spring.dependency-management" version "1.1.0" apply false
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.22" apply false
}

ext {
    javaProjects = subprojects - project(":muxu-platform")
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://maven.aliyun.com/nexus/content/groups/public"
        }
    }

    group = 'com.hismalltree'
    version = '0.0.1-SNAPSHOT'

}

configure([rootProject] + javaProjects) {
    apply plugin: 'io.spring.dependency-management'

    if (project.name.startsWith('demo-') || project.name.startsWith('muxu')) {
        apply plugin: "kotlin"
        apply plugin: 'org.jetbrains.kotlin.jvm'
        apply plugin: 'org.jetbrains.kotlin.plugin.spring'

        [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
        [compileJava, compileTestJava]*.sourceCompatibility = JavaVersion.VERSION_21
        [compileJava, compileTestJava]*.targetCompatibility = JavaVersion.VERSION_21


        [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
        [compileJava, compileTestJava]*.sourceCompatibility = JavaVersion.VERSION_17
        [compileJava, compileTestJava]*.targetCompatibility = JavaVersion.VERSION_17

        tasks.register('prepareKotlinBuildScriptModel') {

        }
    }

    if(project.name.contains('spring')) {
        apply plugin: 'org.springframework.boot'
    }

    if(project.name.contains("scala")) {
        apply plugin: 'scala'

        sourceSets {
            main({
                scala {
                    srcDirs = ['src/main/scala', 'src/main/kotlin', 'src/main/java']
                }
                kotlin {
                    srcDirs = ['src/main/kotlin']
                }
                java {
                    srcDirs = []
                }
            })

            test {
                scala {
                    srcDirs = ['src/test/scala', 'src/test/kotlin', 'src/test/java']
                }
                kotlin {
                    srcDirs = ['src/test/kotlin']
                }
                java {
                    srcDirs = []
                }
            }
        }

        tasks.register("createDirs") {
            sourceSets*.scala.srcDirs*.each { it.mkdirs() }
        }
    }

    configurations {
        dependencyManagement {
            canBeConsumed = false
            canBeResolved = false
            visible = false
        }
        matching { it.name.endsWith("Classpath") }.configureEach { it.extendsFrom(dependencyManagement) }
    }

    dependencies {
        dependencyManagement(enforcedPlatform(dependencies.project(path: ":muxu-platform")))
    }

}


