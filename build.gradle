buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id("org.springframework.boot") version "3.0.6" apply false
    id("io.spring.dependency-management") version "1.1.0" apply false
    id("org.jetbrains.kotlin.jvm") version "1.7.22" apply false
    id("org.jetbrains.kotlin.plugin.spring") version "1.7.22" apply false
}

ext {
    javaProjects = subprojects - project(":demo-platform")
}

allprojects {
    repositories {
        mavenCentral()
    }

    group = 'com.yoveuio'
    version = '0.0.1-SNAPSHOT'

}

configure(project(':demo-platform')) {
    ext {
        elasticsearchVersion = '7.10.2'
        lombokVersion = '1.18.24'
        flinkVersion = '1.17.0'
        springbootVersion = '3.0.6'
    }
}

configure([rootProject] + javaProjects) {
    if (project.name in ['demo-spring']) {
        apply plugin: 'org.springframework.boot'
    }
    apply plugin: "kotlin"
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    [compileJava, compileTestJava]*.sourceCompatibility = JavaVersion.VERSION_17
    [compileJava, compileTestJava]*.targetCompatibility = JavaVersion.VERSION_17

    configurations {
        dependencyManagement {
            canBeConsumed = false
            canBeResolved = false
            visible = false
        }
        matching { it.name.endsWith("Classpath") }.all { it.extendsFrom(dependencyManagement) }
    }

    dependencies {
        dependencyManagement(enforcedPlatform(dependencies.project(path: ":demo-platform")))
    }

}
