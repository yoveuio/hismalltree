plugins {
    id 'java-platform'
}

javaPlatform {
    allowDependencies()
}

ext {
    // lib version
    scalaVersion = '2.12.17'
    springbootVersion = '3.0.6'
    elasticsearchVersion = '7.10.2'
    flinkVersion = '1.17.0'

    // utils version
    guavaVersion = '31.1-jre'
    apacheCommonVersion = '3.12.0'
    jacksonVersion = '2.14.2'
    slf4jVersion = '2.0.7'
    lombokVersion = '1.18.24'
    vavrVersion = '0.9.1'

    mockitoTestVersion = '5.5.0'
    kotlinTestVersion = '1.9.10'
}

dependencies {

    api(platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.6.4"))
    api(platform("org.jetbrains.kotlinx:kotlinx-serialization-bom:1.4.0"))

    constraints {
        // scala
        api "org.scala-lang:scala-library:${scalaVersion}"
        api "org.scala-lang:scala-compiler:${scalaVersion}"
        api "org.scala-lang:scala-reflect:${scalaVersion}"
        api "org.scalatest:scalatest_2.12:3.0.0"

        // spring
        api "org.springframework.boot:spring-boot-starter:${springbootVersion}"
        api "org.springframework.boot:spring-boot-starter-web:${springbootVersion}"
        api "org.springframework.boot:spring-boot-starter-test:${springbootVersion}"

        // elasticsearch
        api "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}"
        api "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
        api "org.elasticsearch.client:elasticsearch-rest-client-sniffer:${elasticsearchVersion}"
        api "org.elasticsearch:elasticsearch:${elasticsearchVersion}"

        // flink
        api "org.apache.flink:flink-clients:${flinkVersion}"
        api "org.apache.flink:flink-java:${flinkVersion}"
        api "org.apache.flink:flink-streaming-java:${flinkVersion}"

        // utils
        api "com.google.guava:guava:${guavaVersion}"
        api "org.apache.commons:commons-lang3:${apacheCommonVersion}"
        api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        api "io.vavr:vavr:${vavrVersion}"
        api "org.projectlombok:lombok:${lombokVersion}"
        api "org.slf4j:slf4j-api:${slf4jVersion}"

        // test
        api "org.jetbrains.kotlin:kotlin-test-junit:${kotlinTestVersion}"
        api "org.mockito:mockito-core:${mockitoTestVersion}"
    }
}